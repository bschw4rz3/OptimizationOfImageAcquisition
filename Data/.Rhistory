library(psych)
library(mosaic)
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
setwd("D:/noav/Projects/OptimizationOfImageAcquisition/Data")
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
quality <- read.csv2("quality.csv", sep = ";", dec = ",")
View(results)
View(quality)
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
quality <- read.csv2("quality.csv", sep = ";", dec = ",")
## ---- QUADPOS --------
meanQuadPos <- mean(quality$QUADPOS, na.rm=TRUE)
## ---- GREEDY vs. QUADPOS --------
meanGREEDY <- mean(quality$GREEDY, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean)
write.csv2(bootvtlgGreedy, file="histogramQualityGreedy.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
## ---- FORCE vs. QUADPOS --------
meanFORCE <- mean(quality$FORCE, na.rm=TRUE)
set.seed(132)
bootvtlgFORCE <- do(10000) * mean(~FORCE, data=resample(quality), na.rm=TRUE)
lowerbootvtlgFORCE<- do(5000) * mean(~FORCE, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgFORCE$mean, "pnorm", mean=mean(bootvtlgFORCE$mean), sd=sd(bootvtlgFORCE$mean))
shapiro.test(lowerbootvtlgFORCE$mean)
write.csv2(bootvtlgFORCE, file="histogramQualityForce.csv", sep=";")
qplot(bootvtlgFORCE$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgFORCE, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgFORCE)
## ---- SEQUENCE vs. QUADPOS --------
meanSEQUENCE <- mean(quality$SEQUENCE_MONTE_CARLO, na.rm=TRUE)
set.seed(132)
bootvtlgSEQUENCE <- do(10000) * mean(~SEQUENCE_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
lowerbootvtlgSEQUENCE<- do(5000) * mean(~SEQUENCE_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgSEQUENCE$mean, "pnorm", mean=mean(bootvtlgSEQUENCE$mean), sd=sd(bootvtlgSEQUENCE$mean))
shapiro.test(lowerbootvtlgSEQUENCE$mean)
write.csv2(bootvtlgSEQUENCE, file="histogramQualitySEQUENCE.csv", sep=";")
qplot(bootvtlgSEQUENCE$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgSEQUENCE, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgSEQUENCE)
## ---- ROLLOUT vs. QUADPOS --------
meanROLLOUT <- mean(quality$ROLLOUT_MONTE_CARLO, na.rm=TRUE)
set.seed(132)
bootvtlgROLLOUT <- do(10000) * mean(~ROLLOUT_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
lowerbootvtlgROLLOUT<- do(5000) * mean(~ROLLOUT_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgROLLOUT$mean, "pnorm", mean=mean(bootvtlgROLLOUT$mean), sd=sd(bootvtlgROLLOUT$mean))
shapiro.test(lowerbootvtlgROLLOUT$mean)
write.csv2(bootvtlgROLLOUT, file="histogramQualityROLLOUT.csv", sep=";")
qplot(bootvtlgROLLOUT$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgROLLOUT, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgROLLOUT)
View(quality)
## ---- Gridded Random vs. QUADPOS --------
meanGRIDDED <- mean(quality$Gridded.Random, na.rm=TRUE)
set.seed(132)
bootvtlgGRIDDED <- do(10000) * mean(~Gridded.Random, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGRIDDED<- do(5000) * mean(~Gridded.Random, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGRIDDED$mean, "pnorm", mean=mean(bootvtlgGRIDDED$mean), sd=sd(bootvtlgGRIDDED$mean))
shapiro.test(lowerbootvtlgGRIDDED$mean)
write.csv2(bootvtlgGRIDDED, file="histogramQualityGRIDDED.csv", sep=";")
qplot(bootvtlgGRIDDED$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGRIDDED, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGRIDDED)
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
quality <- read.csv2("quality.csv", sep = ";", dec = ",")
## ---- QUADPOS --------
meanQuadPos <- mean(quality$QUADPOS, na.rm=TRUE)
## ---- GREEDY vs. QUADPOS --------
meanGREEDY <- mean(quality$GREEDY, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean)
write.csv2(bootvtlgGreedy, file="histogramQualityGreedy.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
# GG
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
## ---- FORCE vs. QUADPOS --------
meanFORCE <- mean(quality$FORCE, na.rm=TRUE)
set.seed(132)
bootvtlgFORCE <- do(10000) * mean(~FORCE, data=resample(quality), na.rm=TRUE)
lowerbootvtlgFORCE<- do(5000) * mean(~FORCE, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgFORCE$mean, "pnorm", mean=mean(bootvtlgFORCE$mean), sd=sd(bootvtlgFORCE$mean))
shapiro.test(lowerbootvtlgFORCE$mean)
write.csv2(bootvtlgFORCE, file="histogramQualityForce.csv", sep=";")
qplot(bootvtlgFORCE$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgFORCE, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgFORCE)
## ---- SEQUENCE vs. QUADPOS --------
meanSEQUENCE <- mean(quality$SEQUENCE_MONTE_CARLO, na.rm=TRUE)
set.seed(132)
bootvtlgSEQUENCE <- do(10000) * mean(~SEQUENCE_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
lowerbootvtlgSEQUENCE<- do(5000) * mean(~SEQUENCE_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgSEQUENCE$mean, "pnorm", mean=mean(bootvtlgSEQUENCE$mean), sd=sd(bootvtlgSEQUENCE$mean))
shapiro.test(lowerbootvtlgSEQUENCE$mean)
write.csv2(bootvtlgSEQUENCE, file="histogramQualitySEQUENCE.csv", sep=";")
qplot(bootvtlgSEQUENCE$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgSEQUENCE, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgSEQUENCE)
## ---- ROLLOUT vs. QUADPOS --------
meanROLLOUT <- mean(quality$ROLLOUT_MONTE_CARLO, na.rm=TRUE)
set.seed(132)
bootvtlgROLLOUT <- do(10000) * mean(~ROLLOUT_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
lowerbootvtlgROLLOUT<- do(5000) * mean(~ROLLOUT_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgROLLOUT$mean, "pnorm", mean=mean(bootvtlgROLLOUT$mean), sd=sd(bootvtlgROLLOUT$mean))
shapiro.test(lowerbootvtlgROLLOUT$mean)
write.csv2(bootvtlgROLLOUT, file="histogramQualityROLLOUT.csv", sep=";")
qplot(bootvtlgROLLOUT$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgROLLOUT, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgROLLOUT)
## ---- Gridded Random vs. QUADPOS --------
meanGRIDDED <- mean(quality$Gridded.Random, na.rm=TRUE)
set.seed(132)
bootvtlgGRIDDED <- do(10000) * mean(~Gridded.Random, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGRIDDED<- do(5000) * mean(~Gridded.Random, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGRIDDED$mean, "pnorm", mean=mean(bootvtlgGRIDDED$mean), sd=sd(bootvtlgGRIDDED$mean))
shapiro.test(lowerbootvtlgGRIDDED$mean)
write.csv2(bootvtlgGRIDDED, file="histogramQualityGRIDDED.csv", sep=";")
qplot(bootvtlgGRIDDED$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGRIDDED, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGRIDDED)
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QUADPOS, na.rm=TRUE)
meanGREEDY <- mean(speed$GREEDY, na.rm=TRUE)
set.seed(823)
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QUADPOS, na.rm=TRUE)
View(speed)
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QuadPos, na.rm=TRUE)
meanGREEDY <- mean(speed$GREEDY, na.rm=TRUE)
meanGREEDY <- mean(speed$Greedy, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~GREEDY, data=resample(speed), na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~Greedy, data=resample(speed), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~Greedy, data=resample(speed), na.rm=TRUE)
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean)
write.csv2(bootvtlgGreedy, file="histogramSpeed.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
quality <- read.csv2("quality.csv", sep = ";", dec = ",")
## ---- QUADPOS --------
meanQuadPos <- mean(quality$QUADPOS, na.rm=TRUE)
## ---- GREEDY vs. QUADPOS --------
meanGREEDY <- mean(quality$GREEDY, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean)
write.csv2(bootvtlgGreedy, file="histogramQualityGreedy.csv", sep=";")
library(psych)
library(mosaic)
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
quality <- read.csv2("quality.csv", sep = ";", dec = ",")
## ---- QUADPOS --------
meanQuadPos <- mean(quality$QUADPOS, na.rm=TRUE)
## ---- GREEDY vs. QUADPOS --------
meanGREEDY <- mean(quality$GREEDY, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean)
write.csv2(bootvtlgGreedy, file="histogramQualityGreedy.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
quality <- read.csv2("quality.csv", sep = ";", dec = ",")
## ---- QUADPOS --------
meanQuadPos <- mean(quality$QUADPOS, na.rm=TRUE)
## ---- GREEDY vs. QUADPOS --------
meanGREEDY <- mean(quality$GREEDY, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean)
write.csv2(bootvtlgGreedy, file="histogramQualityGreedy.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
## ---- FORCE vs. QUADPOS --------
meanFORCE <- mean(quality$FORCE, na.rm=TRUE)
set.seed(132)
bootvtlgFORCE <- do(10000) * mean(~FORCE, data=resample(quality), na.rm=TRUE)
lowerbootvtlgFORCE<- do(5000) * mean(~FORCE, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgFORCE$mean, "pnorm", mean=mean(bootvtlgFORCE$mean), sd=sd(bootvtlgFORCE$mean))
shapiro.test(lowerbootvtlgFORCE$mean)
write.csv2(bootvtlgFORCE, file="histogramQualityForce.csv", sep=";")
qplot(bootvtlgFORCE$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgFORCE, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgFORCE)
## ---- SEQUENCE vs. QUADPOS --------
meanSEQUENCE <- mean(quality$SEQUENCE_MONTE_CARLO, na.rm=TRUE)
set.seed(132)
bootvtlgSEQUENCE <- do(10000) * mean(~SEQUENCE_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
lowerbootvtlgSEQUENCE<- do(5000) * mean(~SEQUENCE_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgSEQUENCE$mean, "pnorm", mean=mean(bootvtlgSEQUENCE$mean), sd=sd(bootvtlgSEQUENCE$mean))
shapiro.test(lowerbootvtlgSEQUENCE$mean)
write.csv2(bootvtlgSEQUENCE, file="histogramQualitySEQUENCE.csv", sep=";")
qplot(bootvtlgSEQUENCE$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgSEQUENCE, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgSEQUENCE)
## ---- ROLLOUT vs. QUADPOS --------
meanROLLOUT <- mean(quality$ROLLOUT_MONTE_CARLO, na.rm=TRUE)
set.seed(132)
bootvtlgROLLOUT <- do(10000) * mean(~ROLLOUT_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
lowerbootvtlgROLLOUT<- do(5000) * mean(~ROLLOUT_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgROLLOUT$mean, "pnorm", mean=mean(bootvtlgROLLOUT$mean), sd=sd(bootvtlgROLLOUT$mean))
shapiro.test(lowerbootvtlgROLLOUT$mean)
write.csv2(bootvtlgROLLOUT, file="histogramQualityROLLOUT.csv", sep=";")
qplot(bootvtlgROLLOUT$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgROLLOUT, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgROLLOUT)
## ---- Gridded Random vs. QUADPOS --------
meanGRIDDED <- mean(quality$Gridded.Random, na.rm=TRUE)
set.seed(132)
bootvtlgGRIDDED <- do(10000) * mean(~Gridded.Random, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGRIDDED<- do(5000) * mean(~Gridded.Random, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGRIDDED$mean, "pnorm", mean=mean(bootvtlgGRIDDED$mean), sd=sd(bootvtlgGRIDDED$mean))
shapiro.test(lowerbootvtlgGRIDDED$mean)
write.csv2(bootvtlgGRIDDED, file="histogramQualityGRIDDED.csv", sep=";")
qplot(bootvtlgGRIDDED$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGRIDDED, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGRIDDED)
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QuadPos, na.rm=TRUE)
meanGREEDY <- mean(speed$Greedy, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~Greedy, data=resample(speed), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~Greedy, data=resample(speed), na.rm=TRUE)
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean)
write.csv2(bootvtlgGreedy, file="histogramSpeed.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
speed <- read.csv2("speed.csv", sep = ";", dec = ",")
quality <- read.csv2("quality.csv", sep = ";", dec = ",")
## ---- QUADPOS --------
meanQuadPos <- mean(quality$QUADPOS, na.rm=TRUE)
## ---- GREEDY vs. QUADPOS --------
meanGREEDY <- mean(quality$GREEDY, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgGreedy, file="histogramQualityGreedy.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
## ---- FORCE vs. QUADPOS --------
meanFORCE <- mean(quality$FORCE, na.rm=TRUE)
set.seed(132)
bootvtlgFORCE <- do(10000) * mean(~FORCE, data=resample(quality), na.rm=TRUE)
lowerbootvtlgFORCE<- do(5000) * mean(~FORCE, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgFORCE$mean, "pnorm", mean=mean(bootvtlgFORCE$mean), sd=sd(bootvtlgFORCE$mean))
shapiro.test(lowerbootvtlgFORCE$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgGreedy, file="histogramQualityGreedy.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
# Normalverteilung?
ks.test(bootvtlgFORCE$mean, "pnorm", mean=mean(bootvtlgFORCE$mean), sd=sd(bootvtlgFORCE$mean))
shapiro.test(lowerbootvtlgFORCE$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgFORCE, file="histogramQualityForce.csv", sep=";")
qplot(bootvtlgFORCE$mean,
geom = "histogram")
shapiro.test(lowerbootvtlgFORCE$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgFORCE, file="histogramQualityForce.csv", sep=";")
qplot(bootvtlgFORCE$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgFORCE, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgFORCE)
## ---- SEQUENCE vs. QUADPOS --------
meanSEQUENCE <- mean(quality$SEQUENCE_MONTE_CARLO, na.rm=TRUE)
set.seed(132)
bootvtlgSEQUENCE <- do(10000) * mean(~SEQUENCE_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
lowerbootvtlgSEQUENCE<- do(5000) * mean(~SEQUENCE_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgSEQUENCE$mean, "pnorm", mean=mean(bootvtlgSEQUENCE$mean), sd=sd(bootvtlgSEQUENCE$mean))
shapiro.test(lowerbootvtlgSEQUENCE$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgSEQUENCE, file="histogramQualitySEQUENCE.csv", sep=";")
qplot(bootvtlgSEQUENCE$mean,
geom = "histogram")
## ---- ROLLOUT vs. QUADPOS --------
meanROLLOUT <- mean(quality$ROLLOUT_MONTE_CARLO, na.rm=TRUE)
set.seed(132)
bootvtlgROLLOUT <- do(10000) * mean(~ROLLOUT_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
lowerbootvtlgROLLOUT<- do(5000) * mean(~ROLLOUT_MONTE_CARLO, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgROLLOUT$mean, "pnorm", mean=mean(bootvtlgROLLOUT$mean), sd=sd(bootvtlgROLLOUT$mean))
shapiro.test(lowerbootvtlgROLLOUT$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgROLLOUT, file="histogramQualityROLLOUT.csv", sep=";")
qplot(bootvtlgROLLOUT$mean,
geom = "histogram")
qplot(bootvtlgROLLOUT$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgROLLOUT, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgROLLOUT)
## ---- Gridded Random vs. QUADPOS --------
meanGRIDDED <- mean(quality$Gridded.Random, na.rm=TRUE)
set.seed(132)
bootvtlgGRIDDED <- do(10000) * mean(~Gridded.Random, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGRIDDED<- do(5000) * mean(~Gridded.Random, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGRIDDED$mean, "pnorm", mean=mean(bootvtlgGRIDDED$mean), sd=sd(bootvtlgGRIDDED$mean))
shapiro.test(lowerbootvtlgGRIDDED$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgGRIDDED, file="histogramQualityGRIDDED.csv", sep=";")
qplot(bootvtlgGRIDDED$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGRIDDED, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGRIDDED)
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QuadPos, na.rm=TRUE)
meanGREEDY <- mean(speed$Greedy, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~Greedy, data=resample(speed), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~Greedy, data=resample(speed), na.rm=TRUE)
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgGreedy, file="histogramSpeed.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QuadPos, na.rm=TRUE)
meanGridded <- mean(speed$Gridded.Random, na.rm=TRUE)
set.seed(823)
bootvtlgGRIDDED <- do(10000) * mean(~Gridded.Random, data=resample(speed), na.rm=TRUE)
lowerbootvtlgGRIDDED <- do(5000) * mean(~Gridded.Random, data=resample(speed), na.rm=TRUE)
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
ks.test(bootvtlgGRIDDED$mean, "pnorm", mean=mean(bootvtlgGRIDDED$mean), sd=sd(bootvtlgGRIDDED$mean))
shapiro.test(lowerbootvtlgGRIDDED$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgGRIDDED, file="histogramSpeed.csv", sep=";")
qplot(bootvtlgGRIDDED$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QuadPos, na.rm=TRUE)
meanGREEDY <- mean(speed$Greedy, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~Greedy, data=resample(speed), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~Greedy, data=resample(speed), na.rm=TRUE)
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean))
shapiro.test(lowerbootvtlgGreedy$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgGreedy, file="histogramSpeed.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QuadPos, na.rm=TRUE)
meanGridded <- mean(speed$Gridded.Random, na.rm=TRUE)
set.seed(823)
bootvtlgGRIDDED <- do(10000) * mean(~Gridded.Random, data=resample(speed), na.rm=TRUE)
lowerbootvtlgGRIDDED <- do(5000) * mean(~Gridded.Random, data=resample(speed), na.rm=TRUE)
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
ks.test(bootvtlgGRIDDED$mean, "pnorm", mean=mean(bootvtlgGRIDDED$mean), sd=sd(bootvtlgGRIDDED$mean))
shapiro.test(lowerbootvtlgGRIDDED$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgGRIDDED, file="histogramSpeed.csv", sep=";")
qplot(bootvtlgGRIDDED$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGRIDDED, probs=c(0.0, 0.95))
# Kann kein Hypothesentesten machen, da keine Normalverteilung vorhanden...
prop(~mean > meanQuadPos, data=bootvtlgGRIDDED)
View(speed)
quadGridded <- results[results$Algorithmus == "GUI_ID_QUADSEARCH" | results$Algorithmus == "GUI_ID_GRID_APPROACHES",]
#--- just look for some KPIs -----------------------------------------
results <- read.csv2("results.csv", sep = ";", dec = ",")
quadGridded <- results[results$Algorithmus == "GUI_ID_QUADSEARCH" | results$Algorithmus == "GUI_ID_GRID_APPROACHES",]
boxplot(quadGridded$Zeit.ms., quadGridded$Algorithmus)
kruskal.test(quadGridded$Zeit.ms.~quadGridded$Algorithmus)
# Es liegen keine unterschiede vor...
wilcox.test(Zeit.ms.~Algorithmus, data = quadGridded, exact=FALSE, correct = FALSE, conf.int = TRUE)
quadGreedy <- results[results$Algorithmus == "GUI_ID_QUADSEARCH" | results$Algorithmus == "GUI_ID_GREEDY",]
boxplot(quadGreedy$Zeit.ms., quadGreedy$Algorithmus)
kruskal.test(quadGreedy$Zeit.ms.~quadGreedy$Algorithmus)
# Es liegen keine unterschiede vor...
wilcox.test(Zeit.ms.~Algorithmus, data = quadGreedy, exact=FALSE, correct = FALSE, conf.int = TRUE)
#--- Speed - bootstrapping - Gridded -----------------------------------------------------
meanQuadPos <- mean(speed$QuadPos, na.rm=TRUE)
meanGridded <- mean(speed$Gridded.Random, na.rm=TRUE)
#--- Speed - bootstrapping -----------------------------------------------------
meanQuadPos <- mean(speed$QuadPos, na.rm=TRUE)
meanGREEDY <- mean(speed$Greedy, na.rm=TRUE)
meanGridded <- mean(speed$Gridded.Random, na.rm=TRUE)
View(speed)
## ---- QUADPOS --------
meanQuadPos <- mean(quality$QUADPOS, na.rm=TRUE)
## ---- GREEDY vs. QUADPOS --------
meanGREEDY <- mean(quality$GREEDY, na.rm=TRUE)
set.seed(823)
bootvtlgGreedy <- do(10000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
lowerbootvtlgGreedy <- do(5000) * mean(~GREEDY, data=resample(quality), na.rm=TRUE)
# Normalverteilung?
ks.test(bootvtlgGreedy$mean, "pnorm", mean=mean(bootvtlgGreedy$mean), sd=sd(bootvtlgGreedy$mean)) # p < 0.05 = Keine Normalverteilung
shapiro.test(lowerbootvtlgGreedy$mean) # p < 0.05 = Keine Normalverteilung
write.csv2(bootvtlgGreedy, file="histogramQualityGreedy.csv", sep=";")
qplot(bootvtlgGreedy$mean,
geom = "histogram")
quantile(~mean, data=bootvtlgGreedy, probs=c(0.0, 0.95))
# GG
prop(~mean > meanQuadPos, data=bootvtlgGreedy)
## ---- FORCE vs. QUADPOS --------
meanFORCE <- mean(quality$FORCE, na.rm=TRUE)
## ---- SEQUENCE vs. QUADPOS --------
meanSEQUENCE <- mean(quality$SEQUENCE_MONTE_CARLO, na.rm=TRUE)
## ---- ROLLOUT vs. QUADPOS --------
meanROLLOUT <- mean(quality$ROLLOUT_MONTE_CARLO, na.rm=TRUE)
## ---- Gridded Random vs. QUADPOS --------
meanGRIDDED <- mean(quality$Gridded.Random, na.rm=TRUE)
